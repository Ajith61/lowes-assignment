package com.lowes.notificationservice.service;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.stream.function.StreamBridge;
import org.springframework.messaging.support.MessageBuilder;
import org.springframework.stereotype.Service;
import com.lowes.notificationservice.model.OrderDao;
import com.lowes.notificationservice.repository.OrderRepository;

@Service
public class NotificationService {
	
	@Autowired
	private  OrderRepository orderRepository;
	  @Autowired
	    private  StreamBridge streamBridge;

	public void processOrderStatus(String orderId) {
        if(orderId!=null) {
        	Optional<OrderDao> orderDao = orderRepository.findById(orderId);
        	if (orderDao.isPresent()) {
        		orderDao.get().setOrderStatus("PROCESSED");
        		orderRepository.save(orderDao.get());
        		streamBridge.send("notificationEventSupplierStock-out-1", MessageBuilder.withPayload("1").build());
        	}
        	
        }
	}
	
	

}
