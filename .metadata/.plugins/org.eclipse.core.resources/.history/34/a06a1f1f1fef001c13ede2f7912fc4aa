package com.lowes.orderservice.controller;

import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.lowes.orderservice.client.InventoryClient;
import com.lowes.orderservice.model.OrderDao;
import com.lowes.orderservice.model.OrderDto;
import com.lowes.orderservice.repository.OrderRepository;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@RestController
@RequestMapping("/api/order")
@RequiredArgsConstructor
@Slf4j
public class OrderController {

	private OrderRepository orderRepository;
	private InventoryClient inventoryClient;

	@PostMapping public String placeOrder(@RequestBody OrderDto orderDto) {
	  
	  boolean productsInStock =
	  inventoryClient.checkStock(orderDto.getProductId());
	  
	  if (productsInStock) { 
		  OrderDao order = new OrderDao();
	  //order.setOrderLineItems(orderDto.getOrderLineItemsList()); //
	 // order.setOrderNumber(UUID.randomUUID().toString());
	  
	  //orderRepository.save(order); //
	  //log.info("Sending Order Details with Order Id {} to Notification Service",
	 // order.getId()); //streamBridge.send("notificationEventSupplier-out-0",
	 // MessageBuilder.withPayload(order.getId()).build());
	  return
	  "Order Place Successfully";
	  } else 
	  {
		  return
	  "Order Failed - One of the Product in your Order is out of stock"; } }

	private Boolean handleErrorCase() {
		return false;
	}

}
